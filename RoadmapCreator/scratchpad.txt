//Function to load table content into a variable

function loadTableContent(jiraTableClass) {
    const jiraTable = document.querySelector(`.${jiraTableClass}`);
    const tableData = [];

    if (jiraTable) {
        const rows = jiraTable.querySelectorAll('tr');
        rows.forEach((row) => {
            const cells = row.querySelectorAll('td, th');
            const rowData = [];
            cells.forEach((cell) => {
                rowData.push(cell.textContent.trim());
            });
            tableData.push(rowData);
        });
    }

    return tableData;
}

// Function to dump the data from the object into a table

function createHtmlTable(tableData) {
    let htmlTable = '<table style="background-color: red; border: 1px solid black;">';
    tableData.forEach((rowData) => {
        htmlTable += '<tr>';
        rowData.forEach((cellData) => {
            htmlTable += `<td style="border: 1px solid black;">${cellData}</td>`;
        });
        htmlTable += '</tr>';
    });
    htmlTable += '</table>';

    return htmlTable;
}

//Function to display the HTML table
function displayHtmlTable(htmlTable) {
    const messageDiv = document.getElementById('message');
    messageDiv.innerHTML = htmlTable;
}

// Main 

function checkJiraTable() {
    setTimeout(() => {
        const tableData = loadAllTableContent('jira-issues');
        if (tableData.length > 0) {
            const htmlTable = createHtmlTable(tableData);
            displayHtmlTable(htmlTable);
        } else {
            const messageDiv = document.getElementById('message');
            messageDiv.textContent = 'Sorry, Jira Table not found.';
        }
    }, 2000); // Adjust the timeout as needed
}

 //function to handle pagination

async function loadAllTableContent(jiraTableClass) {
    let allTableData = [];
    let hasNextPage = true;

    while (hasNextPage) {
        const jiraTable = document.querySelector(`.${jiraTableClass}`);
        if (jiraTable) {
            const rows = jiraTable.querySelectorAll('tr');
            rows.forEach((row) => {
                const cells = row.querySelectorAll('td, th');
                const rowData = [];
                cells.forEach((cell) => {
                    rowData.push(cell.textContent.trim());
                });
                allTableData.push(rowData);
            });
        }

        // Check if there is a next page and navigate to it
        const nextPageButton = document.querySelector('.pagination-next');
        if (nextPageButton && !nextPageButton.disabled) {
            nextPageButton.click();
            await new Promise(resolve => setTimeout(resolve, 2000)); // Wait for the next page to load
        } else {
            hasNextPage = false;
        }
    }

    return allTableData;
}


// Call the function to check and display the Jira table
checkJiraTable();
